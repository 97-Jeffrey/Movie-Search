name: Guaranteed Auto PR and Merge

on:
  push:
    branches: [jeffrey]

permissions:
  contents: write
  pull-requests: write

jobs:
  create-and-merge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1. Verify there are actual changes
      - name: Check for changes
        id: check-changes
        run: |
          git fetch origin master
          CHANGES_EXIST=$(git diff --name-only origin/master)
          if [ -z "$CHANGES_EXIST" ]; then
            echo "::warning::No changes detected"
            echo "should_continue=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected:"
            echo "$CHANGES_EXIST"
            echo "should_continue=true" >> $GITHUB_OUTPUT
          fi

      # 2. Create PR using direct API
      - name: Create PR via API
        if: steps.check-changes.outputs.should_continue == 'true'
        id: create-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_JSON=$(curl -s -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls" \
            -d '{
              "title":"Auto PR: $(date +"%Y-%m-%d %H:%M")",
              "body":"Automatically created PR",
              "head":"jeffrey",
              "base":"master"
            }')
          
          PR_NUMBER=$(echo "$PR_JSON" | jq -r '.number')
          PR_URL=$(echo "$PR_JSON" | jq -r '.html_url')
          
          if [ "$PR_NUMBER" != "null" ]; then
            echo "PR_CREATED=true" >> $GITHUB_OUTPUT
            echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "PR_URL=$PR_URL" >> $GITHUB_OUTPUT
            echo "PR created: $PR_URL"
          else
            echo "::error::PR creation failed"
            echo "$PR_JSON"
            exit 1
          fi

      # 3. Merge PR via API
      - name: Merge PR via API
        if: steps.create-pr.outputs.PR_CREATED == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Merging PR #${{ steps.create-pr.outputs.PR_NUMBER }}"
          
          RESPONSE=$(curl -s -X PUT \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ steps.create-pr.outputs.PR_NUMBER }}/merge" \
            -d '{"merge_method":"merge"}')
          
          echo "Merge response:"
          echo "$RESPONSE" | jq .
          
          if [ $(echo "$RESPONSE" | jq -r '.merged') == "true" ]; then
            echo "::notice::Successfully merged"
          else
            echo "::error::Merge failed"
            echo "$RESPONSE" | jq -r '.message'
            exit 1
          fi